{"version":3,"sources":["Component/Paypal.jsx","App.jsx","reportWebVitals.js","index.js"],"names":["Paypal","paypal","useRef","useEffect","window","Buttons","createOrder","data","actions","err","order","create","intent","purchase_units","description","amount","currency_code","value","onApprove","a","capture","console","log","onError","render","current","ref","App","useState","checkOut","setCheckOut","className","type","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"iQAEe,SAASA,IACpB,IAAMC,EAASC,mBA4Bf,OA1BAC,qBAAU,WACNC,OAAOH,OAAOI,QAAQ,CAClBC,YAAa,SAACC,EAAMC,EAASC,GACzB,OAAOD,EAAQE,MAAMC,OAAO,CACxBC,OAAQ,UACRC,eAAgB,CACZ,CACIC,YAAa,qBACbC,OAAQ,CACJC,cAAe,MACfC,MAAO,UAM3BC,UAAU,WAAD,4BAAE,WAAOX,EAAMC,GAAb,eAAAW,EAAA,sEACaX,EAAQE,MAAMU,UAD3B,OACDV,EADC,OAEPW,QAAQC,IAAIZ,GAFL,2CAAF,qDAAC,GAIVa,QAAS,SAACd,GACNY,QAAQC,IAAIb,MAEjBe,OAAOvB,EAAOwB,WAClB,IAGC,8BACI,qBAAKC,IAAKzB,M,MCNP0B,MAtBf,WAAgB,IAAD,EACmBC,oBAAS,GAD5B,mBACNC,EADM,KACIC,EADJ,KAEb,OACE,sBAAKC,UAAU,MAAf,UACE,iDAECF,EACC,cAAC7B,EAAD,IAEA,wBAAQgC,KAAK,SAASD,UAAU,eAC9BE,QAAS,WACPH,GAAY,IAFhB,0BCFOI,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASnB,OACP,cAAC,IAAMoB,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.d27f2977.chunk.js","sourcesContent":["import React, { useRef, useEffect } from 'react'\r\n\r\nexport default function Paypal() {\r\n    const paypal = useRef()\r\n\r\n    useEffect(()=> {\r\n        window.paypal.Buttons({\r\n            createOrder: (data, actions, err) => {\r\n                return actions.order.create({\r\n                    intent: \"CAPTURE\",\r\n                    purchase_units: [\r\n                        {\r\n                            description: \"Cool Looking Table\",\r\n                            amount: {\r\n                                currency_code: \"CAD\",\r\n                                value: 950.00\r\n                            }\r\n                        }\r\n                    ]\r\n                })\r\n            },\r\n            onApprove: async (data, actions) => {\r\n                const order = await actions.order.capture();\r\n                console.log(order);\r\n            },\r\n            onError: (err) => {\r\n                console.log(err);\r\n            }\r\n        }).render(paypal.current) \r\n    }, [])\r\n\r\n    return (\r\n        <div>\r\n            <div ref={paypal}></div>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\nimport Paypal from './Component/Paypal';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nfunction App() {\n  const [checkOut, setCheckOut] = useState(false);\n  return (\n    <div className=\"App\">\n      <h1>Payment Gateway</h1>\n\n      {checkOut ? (\n        <Paypal />\n      ) : (\n        <button type=\"button\" className=\"btn btn-dark\"\n          onClick={() => {\n            setCheckOut(true);\n          }}\n        >\n          CHECKOUT\n        </button>\n      )}\n      \n    </div>\n  );\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}